#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace shareBike
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="shareBike")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertbike(bike instance);
    partial void Updatebike(bike instance);
    partial void Deletebike(bike instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertdispatcher(dispatcher instance);
    partial void Updatedispatcher(dispatcher instance);
    partial void Deletedispatcher(dispatcher instance);
    partial void Insertfence(fence instance);
    partial void Updatefence(fence instance);
    partial void Deletefence(fence instance);
    partial void Insertmanager(manager instance);
    partial void Updatemanager(manager instance);
    partial void Deletemanager(manager instance);
    partial void Insertorderform(orderform instance);
    partial void Updateorderform(orderform instance);
    partial void Deleteorderform(orderform instance);
    partial void Inserttask(task instance);
    partial void Updatetask(task instance);
    partial void Deletetask(task instance);
    #endregion
		
		public DBDataContext() : 
				base(global::shareBike.Properties.Settings.Default.shareBikeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bike> bike
		{
			get
			{
				return this.GetTable<bike>();
			}
		}
		
		public System.Data.Linq.Table<customer> customer
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<dispatcher> dispatcher
		{
			get
			{
				return this.GetTable<dispatcher>();
			}
		}
		
		public System.Data.Linq.Table<fence> fence
		{
			get
			{
				return this.GetTable<fence>();
			}
		}
		
		public System.Data.Linq.Table<manager> manager
		{
			get
			{
				return this.GetTable<manager>();
			}
		}
		
		public System.Data.Linq.Table<orderform> orderform
		{
			get
			{
				return this.GetTable<orderform>();
			}
		}
		
		public System.Data.Linq.Table<task> task
		{
			get
			{
				return this.GetTable<task>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bike")]
	public partial class bike : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<byte> _flag;
		
		private System.Nullable<int> _current_x;
		
		private System.Nullable<int> _current_y;
		
		private System.Nullable<int> _total_time;
		
		private EntitySet<orderform> _orderform;
		
		private EntitySet<task> _task;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnflagChanging(System.Nullable<byte> value);
    partial void OnflagChanged();
    partial void Oncurrent_xChanging(System.Nullable<int> value);
    partial void Oncurrent_xChanged();
    partial void Oncurrent_yChanging(System.Nullable<int> value);
    partial void Oncurrent_yChanged();
    partial void Ontotal_timeChanging(System.Nullable<int> value);
    partial void Ontotal_timeChanged();
    #endregion
		
		public bike()
		{
			this._orderform = new EntitySet<orderform>(new Action<orderform>(this.attach_orderform), new Action<orderform>(this.detach_orderform));
			this._task = new EntitySet<task>(new Action<task>(this.attach_task), new Action<task>(this.detach_task));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="TinyInt")]
		public System.Nullable<byte> flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_x", DbType="Int")]
		public System.Nullable<int> current_x
		{
			get
			{
				return this._current_x;
			}
			set
			{
				if ((this._current_x != value))
				{
					this.Oncurrent_xChanging(value);
					this.SendPropertyChanging();
					this._current_x = value;
					this.SendPropertyChanged("current_x");
					this.Oncurrent_xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_y", DbType="Int")]
		public System.Nullable<int> current_y
		{
			get
			{
				return this._current_y;
			}
			set
			{
				if ((this._current_y != value))
				{
					this.Oncurrent_yChanging(value);
					this.SendPropertyChanging();
					this._current_y = value;
					this.SendPropertyChanged("current_y");
					this.Oncurrent_yChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_time", DbType="Int")]
		public System.Nullable<int> total_time
		{
			get
			{
				return this._total_time;
			}
			set
			{
				if ((this._total_time != value))
				{
					this.Ontotal_timeChanging(value);
					this.SendPropertyChanging();
					this._total_time = value;
					this.SendPropertyChanged("total_time");
					this.Ontotal_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bike_orderform", Storage="_orderform", ThisKey="id", OtherKey="bid")]
		public EntitySet<orderform> orderform
		{
			get
			{
				return this._orderform;
			}
			set
			{
				this._orderform.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bike_task", Storage="_task", ThisKey="id", OtherKey="bid")]
		public EntitySet<task> task
		{
			get
			{
				return this._task;
			}
			set
			{
				this._task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderform(orderform entity)
		{
			this.SendPropertyChanging();
			entity.bike = this;
		}
		
		private void detach_orderform(orderform entity)
		{
			this.SendPropertyChanging();
			entity.bike = null;
		}
		
		private void attach_task(task entity)
		{
			this.SendPropertyChanging();
			entity.bike = this;
		}
		
		private void detach_task(task entity)
		{
			this.SendPropertyChanging();
			entity.bike = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _password;
		
		private string _nickname;
		
		private EntitySet<orderform> _orderform;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    #endregion
		
		public customer()
		{
			this._orderform = new EntitySet<orderform>(new Action<orderform>(this.attach_orderform), new Action<orderform>(this.detach_orderform));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickname", DbType="VarChar(10)")]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_orderform", Storage="_orderform", ThisKey="id", OtherKey="cid")]
		public EntitySet<orderform> orderform
		{
			get
			{
				return this._orderform;
			}
			set
			{
				this._orderform.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderform(orderform entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orderform(orderform entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dispatcher")]
	public partial class dispatcher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _password;
		
		private string _nickname;
		
		private EntitySet<task> _task;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    #endregion
		
		public dispatcher()
		{
			this._task = new EntitySet<task>(new Action<task>(this.attach_task), new Action<task>(this.detach_task));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickname", DbType="VarChar(10)")]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dispatcher_task", Storage="_task", ThisKey="id", OtherKey="handler")]
		public EntitySet<task> task
		{
			get
			{
				return this._task;
			}
			set
			{
				this._task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_task(task entity)
		{
			this.SendPropertyChanging();
			entity.dispatcher = this;
		}
		
		private void detach_task(task entity)
		{
			this.SendPropertyChanging();
			entity.dispatcher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fence")]
	public partial class fence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<byte> _tag;
		
		private System.Nullable<int> _origin_x;
		
		private System.Nullable<int> _origin_y;
		
		private System.Nullable<int> _width;
		
		private System.Nullable<int> _height;
		
		private System.Nullable<int> _score;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntagChanging(System.Nullable<byte> value);
    partial void OntagChanged();
    partial void Onorigin_xChanging(System.Nullable<int> value);
    partial void Onorigin_xChanged();
    partial void Onorigin_yChanging(System.Nullable<int> value);
    partial void Onorigin_yChanged();
    partial void OnwidthChanging(System.Nullable<int> value);
    partial void OnwidthChanged();
    partial void OnheightChanging(System.Nullable<int> value);
    partial void OnheightChanged();
    partial void OnscoreChanging(System.Nullable<int> value);
    partial void OnscoreChanged();
    #endregion
		
		public fence()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag", DbType="TinyInt")]
		public System.Nullable<byte> tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					this.OntagChanging(value);
					this.SendPropertyChanging();
					this._tag = value;
					this.SendPropertyChanged("tag");
					this.OntagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin_x", DbType="Int")]
		public System.Nullable<int> origin_x
		{
			get
			{
				return this._origin_x;
			}
			set
			{
				if ((this._origin_x != value))
				{
					this.Onorigin_xChanging(value);
					this.SendPropertyChanging();
					this._origin_x = value;
					this.SendPropertyChanged("origin_x");
					this.Onorigin_xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin_y", DbType="Int")]
		public System.Nullable<int> origin_y
		{
			get
			{
				return this._origin_y;
			}
			set
			{
				if ((this._origin_y != value))
				{
					this.Onorigin_yChanging(value);
					this.SendPropertyChanging();
					this._origin_y = value;
					this.SendPropertyChanged("origin_y");
					this.Onorigin_yChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int")]
		public System.Nullable<int> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Int")]
		public System.Nullable<int> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_score", DbType="Int")]
		public System.Nullable<int> score
		{
			get
			{
				return this._score;
			}
			set
			{
				if ((this._score != value))
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.manager")]
	public partial class manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _password;
		
		private string _nickname;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    #endregion
		
		public manager()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickname", DbType="VarChar(10)")]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderform")]
	public partial class orderform : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _cid;
		
		private System.Nullable<int> _bid;
		
		private System.Nullable<byte> _flag;
		
		private System.Nullable<int> _start_x;
		
		private System.Nullable<int> _start_y;
		
		private System.Nullable<int> _end_x;
		
		private System.Nullable<int> _end_y;
		
		private System.Nullable<System.DateTime> _start_time;
		
		private System.Nullable<System.DateTime> _end_time;
		
		private System.Nullable<double> _cost;
		
		private EntityRef<bike> _bike;
		
		private EntityRef<customer> _customer;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncidChanging(string value);
    partial void OncidChanged();
    partial void OnbidChanging(System.Nullable<int> value);
    partial void OnbidChanged();
    partial void OnflagChanging(System.Nullable<byte> value);
    partial void OnflagChanged();
    partial void Onstart_xChanging(System.Nullable<int> value);
    partial void Onstart_xChanged();
    partial void Onstart_yChanging(System.Nullable<int> value);
    partial void Onstart_yChanged();
    partial void Onend_xChanging(System.Nullable<int> value);
    partial void Onend_xChanged();
    partial void Onend_yChanging(System.Nullable<int> value);
    partial void Onend_yChanged();
    partial void Onstart_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onend_timeChanged();
    partial void OncostChanging(System.Nullable<double> value);
    partial void OncostChanged();
    #endregion
		
		public orderform()
		{
			this._bike = default(EntityRef<bike>);
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Char(11)")]
		public string cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", DbType="Int")]
		public System.Nullable<int> bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					if (this._bike.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="TinyInt")]
		public System.Nullable<byte> flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_x", DbType="Int")]
		public System.Nullable<int> start_x
		{
			get
			{
				return this._start_x;
			}
			set
			{
				if ((this._start_x != value))
				{
					this.Onstart_xChanging(value);
					this.SendPropertyChanging();
					this._start_x = value;
					this.SendPropertyChanged("start_x");
					this.Onstart_xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_y", DbType="Int")]
		public System.Nullable<int> start_y
		{
			get
			{
				return this._start_y;
			}
			set
			{
				if ((this._start_y != value))
				{
					this.Onstart_yChanging(value);
					this.SendPropertyChanging();
					this._start_y = value;
					this.SendPropertyChanged("start_y");
					this.Onstart_yChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_x", DbType="Int")]
		public System.Nullable<int> end_x
		{
			get
			{
				return this._end_x;
			}
			set
			{
				if ((this._end_x != value))
				{
					this.Onend_xChanging(value);
					this.SendPropertyChanging();
					this._end_x = value;
					this.SendPropertyChanged("end_x");
					this.Onend_xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_y", DbType="Int")]
		public System.Nullable<int> end_y
		{
			get
			{
				return this._end_y;
			}
			set
			{
				if ((this._end_y != value))
				{
					this.Onend_yChanging(value);
					this.SendPropertyChanging();
					this._end_y = value;
					this.SendPropertyChanged("end_y");
					this.Onend_yChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_time
		{
			get
			{
				return this._end_time;
			}
			set
			{
				if ((this._end_time != value))
				{
					this.Onend_timeChanging(value);
					this.SendPropertyChanging();
					this._end_time = value;
					this.SendPropertyChanged("end_time");
					this.Onend_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Float")]
		public System.Nullable<double> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bike_orderform", Storage="_bike", ThisKey="bid", OtherKey="id", IsForeignKey=true)]
		public bike bike
		{
			get
			{
				return this._bike.Entity;
			}
			set
			{
				bike previousValue = this._bike.Entity;
				if (((previousValue != value) 
							|| (this._bike.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bike.Entity = null;
						previousValue.orderform.Remove(this);
					}
					this._bike.Entity = value;
					if ((value != null))
					{
						value.orderform.Add(this);
						this._bid = value.id;
					}
					else
					{
						this._bid = default(Nullable<int>);
					}
					this.SendPropertyChanged("bike");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_orderform", Storage="_customer", ThisKey="cid", OtherKey="id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orderform.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orderform.Add(this);
						this._cid = value.id;
					}
					else
					{
						this._cid = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.task")]
	public partial class task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<byte> _tag;
		
		private System.Nullable<byte> _source;
		
		private System.Nullable<byte> _flag;
		
		private System.Nullable<int> _end_x;
		
		private System.Nullable<int> _end_y;
		
		private System.Nullable<System.DateTime> _start_time;
		
		private System.Nullable<System.DateTime> _end_time;
		
		private string _handler;
		
		private System.Nullable<int> _bid;
		
		private EntityRef<bike> _bike;
		
		private EntityRef<dispatcher> _dispatcher;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntagChanging(System.Nullable<byte> value);
    partial void OntagChanged();
    partial void OnsourceChanging(System.Nullable<byte> value);
    partial void OnsourceChanged();
    partial void OnflagChanging(System.Nullable<byte> value);
    partial void OnflagChanged();
    partial void Onend_xChanging(System.Nullable<int> value);
    partial void Onend_xChanged();
    partial void Onend_yChanging(System.Nullable<int> value);
    partial void Onend_yChanged();
    partial void Onstart_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onend_timeChanged();
    partial void OnhandlerChanging(string value);
    partial void OnhandlerChanged();
    partial void OnbidChanging(System.Nullable<int> value);
    partial void OnbidChanged();
    #endregion
		
		public task()
		{
			this._bike = default(EntityRef<bike>);
			this._dispatcher = default(EntityRef<dispatcher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag", DbType="TinyInt")]
		public System.Nullable<byte> tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					this.OntagChanging(value);
					this.SendPropertyChanging();
					this._tag = value;
					this.SendPropertyChanged("tag");
					this.OntagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="TinyInt")]
		public System.Nullable<byte> source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="TinyInt")]
		public System.Nullable<byte> flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_x", DbType="Int")]
		public System.Nullable<int> end_x
		{
			get
			{
				return this._end_x;
			}
			set
			{
				if ((this._end_x != value))
				{
					this.Onend_xChanging(value);
					this.SendPropertyChanging();
					this._end_x = value;
					this.SendPropertyChanged("end_x");
					this.Onend_xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_y", DbType="Int")]
		public System.Nullable<int> end_y
		{
			get
			{
				return this._end_y;
			}
			set
			{
				if ((this._end_y != value))
				{
					this.Onend_yChanging(value);
					this.SendPropertyChanging();
					this._end_y = value;
					this.SendPropertyChanged("end_y");
					this.Onend_yChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_time
		{
			get
			{
				return this._end_time;
			}
			set
			{
				if ((this._end_time != value))
				{
					this.Onend_timeChanging(value);
					this.SendPropertyChanging();
					this._end_time = value;
					this.SendPropertyChanged("end_time");
					this.Onend_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handler", DbType="Char(11)")]
		public string handler
		{
			get
			{
				return this._handler;
			}
			set
			{
				if ((this._handler != value))
				{
					if (this._dispatcher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhandlerChanging(value);
					this.SendPropertyChanging();
					this._handler = value;
					this.SendPropertyChanged("handler");
					this.OnhandlerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", DbType="Int")]
		public System.Nullable<int> bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					if (this._bike.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bike_task", Storage="_bike", ThisKey="bid", OtherKey="id", IsForeignKey=true)]
		public bike bike
		{
			get
			{
				return this._bike.Entity;
			}
			set
			{
				bike previousValue = this._bike.Entity;
				if (((previousValue != value) 
							|| (this._bike.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bike.Entity = null;
						previousValue.task.Remove(this);
					}
					this._bike.Entity = value;
					if ((value != null))
					{
						value.task.Add(this);
						this._bid = value.id;
					}
					else
					{
						this._bid = default(Nullable<int>);
					}
					this.SendPropertyChanged("bike");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dispatcher_task", Storage="_dispatcher", ThisKey="handler", OtherKey="id", IsForeignKey=true)]
		public dispatcher dispatcher
		{
			get
			{
				return this._dispatcher.Entity;
			}
			set
			{
				dispatcher previousValue = this._dispatcher.Entity;
				if (((previousValue != value) 
							|| (this._dispatcher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dispatcher.Entity = null;
						previousValue.task.Remove(this);
					}
					this._dispatcher.Entity = value;
					if ((value != null))
					{
						value.task.Add(this);
						this._handler = value.id;
					}
					else
					{
						this._handler = default(string);
					}
					this.SendPropertyChanged("dispatcher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
